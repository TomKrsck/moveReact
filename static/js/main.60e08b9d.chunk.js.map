{"version":3,"sources":["components/layout/Header.js","components/todo/TodoItem.js","components/todo/Todos.js","components/cards/CardHeader.js","components/todo/AddTodo.js","components/cards/TaskMenu.js","components/cards/Task.js","components/cards/TaskAdd.js","components/cards/Card.js","components/cards/CardAdd.js","components/cards/CardsContainer.js","components/pages/CardsPage.js","actions/reduxTutorial/index.js","components/reduxTutorial/Link.js","containers/reduxTutorial/FilterLink.js","components/reduxTutorial/Footer.js","containers/reduxTutorial/AddTodo.js","components/reduxTutorial/Todo.js","components/reduxTutorial/ToDoList.js","containers/reduxTutorial/VisibleTodoList.js","components/reduxTutorial/ReduxTutorialApp.js","components/pages/ReduxTutorialPage.js","components/kanbanBoard/Task.js","actions/kanbanBoard/cardActions.js","components/kanbanBoard/Card.js","actions/kanbanBoard/boardActions.js","components/kanbanBoard/Board.js","components/pages/KanbanPage.js","App.js","reducers/kanbanBoard/cards.js","reducers/kanbanBoard/tasks.js","reducers/index.js","index.js"],"names":["Header","react_default","a","createElement","className","es_Link","to","TodoItem","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","getStyle","background","padding","borderBottom","textDecoration","props","todo","complete","inherits","createClass","key","value","_this2","_this$props$todo","id","title","style","type","onChange","markComplete","bind","onClick","e","delTodo","btnStyle","Component","color","border","borderRadius","cursor","float","CardHeader","name","TaskMenu","lib","onClickEditTask","label","disabled","MenuContainer","display","event","_ref","TaskMenu_this2","editTask","Task","taskText","cards_TaskMenu","TaskAdd","onSubmit","preventDefault","addNewTask","state","setState","defineProperty","target","text","Card","getStyleCard","newTask","uniqueID","UUID","v4","tasks","toConsumableArray","deleteTask","filter","el","map","rendered","cards_TaskAdd","cards_CardHeader","cards_Task","renderCard","Button","backgroundColor","textAlign","fontSize","CardAdd","onCardAddClick","CardsContainer","flex","margin","whiteSpace","addCard","cardObj","cards","newCardObj","renderCards","cards_CardAdd","cards_Card","CardsPage","Fragment","cards_CardsContainer","nextTodoId","VisibilityFilters","Link","active","children","href","connect","ownProps","visibilityFilter","dispatch","Footer","FilterLink","input","trim","ref","node","Todo","completed","TodoList","todos","onTodoClick","index","reduxTutorial_Todo","assign","getVisibleTodos","t","Error","toggleTodo","ReduxTutorialApp","reduxTutorial_AddTodo","VisibleTodoList","reduxTutorial_Footer","ReduxTutorialPage","reduxTutorial_ReduxTutorialApp","hoverTaskHandle","bgColor","taskHovered","hoverTaskOffHandle","onOpenModal","openModal","onCloseModal","renderIcon","List","Content","pointerEvents","floated","Icon","open","Item","Segment","onMouseOver","onMouseOut","overflowWrap","content","index_es","onClose","closeOnOverlayClick","center","React","cardActions","header","parentID","handleHeaderChange","handleHeaderSubmit","setHeader","card","onHeaderFocus","select","headerBackground","headerBorder","onHeaderBlur","onHeaderKeyPress","keyCode","window","getSelection","removeAllRanges","handleNewTaskSubmit","addTaskContent","handleTaskChange","onNewTaskKeyPress","shiftKey","taskTextAreaHeight","task","kanbanBoard_Task_Task","Grid","Column","raised","columns","padded","width","Form","Field","borderStyle","placeholder","onKeyDown","onFocus","onBlur","Label","onDeleteCardClick","floating","circular","size","marginLeft","Divider","TextArea","rows","autoHeight","Button_Button","find","cardID","boardActions","Board","onAddCardClick","kanbanBoard_Card","Container","basic","KanbanPage","kanbanBoard_Board","App","axios","delete","then","res","AddTodo","post","data","get","BrowserRouter","layout_Header","Route","exact","path","render","pages_KanbanPage","component","initState","combineReducers","undefined","action","Math","random","objectSpread","console","log","newCard","store","createStore","rootReducer","es","src_App_0","document","getElementById"],"mappings":"oRAgBeA,MAbf,WACI,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAOH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,WAAUL,EAAAC,EAAAC,cAAA,4BACzCF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAaH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAgBH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,KAAIL,EAAAC,EAAAC,cAAA,qBAE1EF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBCNdG,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAJ,IAAAe,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MAEIQ,SAAW,WACP,MAAO,CACHC,WAAY,UACZC,QAAS,OACTC,aAAc,kBACdC,eAAgBnB,EAAKoB,MAAMC,KAAKC,SAChC,eAAiB,SAR7BtB,EAAA,OAAAC,OAAAsB,EAAA,EAAAtB,CAAAJ,EAAAC,GAAAG,OAAAuB,EAAA,EAAAvB,CAAAJ,EAAA,EAAA4B,IAAA,SAAAC,MAAA,WAYa,IAAAC,EAAAxB,KAAAyB,EACiBzB,KAAKiB,MAAMC,KAAzBQ,EADHD,EACGC,GAAIC,EADPF,EACOE,MACZ,OACAvC,EAAAC,EAAAC,cAAA,OAAKsC,MAAO5B,KAAKY,YACbxB,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,SAAOuC,KAAK,WAAWC,SAAU9B,KAAKiB,MAAMc,aAAaC,KAAKhC,KAAM0B,KADxE,IAAAf,OAEWgB,GAGNvC,EAAAC,EAAAC,cAAA,UAAQ2C,QAAW,SAACC,GAAD,OAAOV,EAAKP,MAAMkB,QAAQT,EAAIQ,IAAIN,MAASQ,GAA9D,WArBjB1C,EAAA,CAA8B2C,aAmCtBD,EAAW,CACbvB,WAAY,UACZyB,MAAO,OACPC,OAAQ,OACRzB,QAAS,UACT0B,aAAc,MACdC,OAAQ,UACRC,MAAO,SAGEhD,OC7CK2C,mBCaLM,GCdcN,YDD7B,SAAA1C,GAEE,SAAAgD,EAAY1B,GAAQ,OAAAnB,OAAAC,EAAA,EAAAD,CAAAE,KAAA2C,GAAA7C,OAAAS,EAAA,EAAAT,CAAAE,KAAAF,OAAAU,EAAA,EAAAV,CAAA6C,GAAAlC,KAAAT,KACZiB,IAHV,OAAAnB,OAAAsB,EAAA,EAAAtB,CAAA6C,EAAAhD,GAAAG,OAAAuB,EAAA,EAAAvB,CAAA6C,EAAA,EAAArB,IAAA,SAAAC,MAAA,WAOI,OACEnC,EAAAC,EAAAC,cAAA,WACGU,KAAKiB,MAAM2B,UATpBD,EAAA,CAAgCN,wCEInBQ,EAAb,SAAAlD,GAAA,SAAAkD,IAAA,IAAAjD,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6C,GAAA,QAAA5C,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAA+C,IAAApC,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MAEEyC,SAAW,kBACTzD,EAAAC,EAAAC,cAACwD,EAAA,KAAD,CAAMpB,GAAG,WACNtC,EAAAC,EAAAC,cAACwD,EAAA,KAAD,CACAb,QAASc,GADT,QAGA3D,EAAAC,EAAAC,cAACwD,EAAA,KAAD,eACA1D,EAAAC,EAAAC,cAACwD,EAAA,UAAD,MACA1D,EAAAC,EAAAC,cAACwD,EAAA,QAAD,CAASE,MAAM,eACd5D,EAAAC,EAAAC,cAACwD,EAAA,KAAD,CAAMG,UAAQ,GAAd,OACA7D,EAAAC,EAAAC,cAACwD,EAAA,KAAD,eAXRjD,EAgBEqD,cAAgB,kBACd9D,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACwD,EAAA,aAAD,CACApB,GAAG,UACHE,MAAO,CAAEW,OAAQ,mBACjBY,QAAS,gBACTC,MAAO,WAJP,qBAOCvD,EAAKgD,aAzBdhD,EAAA,OAAAC,OAAAsB,EAAA,EAAAtB,CAAA+C,EAAAlD,GAAAG,OAAAuB,EAAA,EAAAvB,CAAA+C,EAAA,EAAAvB,IAAA,SAAAC,MAAA,WA8BI,OACEnC,EAAAC,EAAAC,cAAA,WACIU,KAAKkD,qBAhCfL,EAAA,CAA8BR,aAsCxBU,EAAkB,SAAAM,KAAGD,MAAHC,EAAUpC,MAAV,OAAsBqC,EAAKrC,MAAMsC,YAE1CV,ICfAW,EA1Bf,SAAA7D,GAEE,SAAA6D,EAAYvC,GAAO,IAAApB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwD,IACjB3D,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,KAAAF,OAAAU,EAAA,EAAAV,CAAA0D,GAAA/C,KAAAT,KAAMiB,KAGRL,SAAW,WACT,MAAO,CACL0B,MAAO,OACPzB,WAAY,SAPGhB,EAFrB,OAAAC,OAAAsB,EAAA,EAAAtB,CAAA0D,EAAA7D,GAAAG,OAAAuB,EAAA,EAAAvB,CAAA0D,EAAA,EAAAlC,IAAA,SAAAC,MAAA,WAcI,OACEnC,EAAAC,EAAAC,cAAA,OAAKsC,MAAO5B,KAAKY,YACbZ,KAAKiB,MAAMwC,SACbrE,EAAAC,EAAAC,cAACoE,EAAD,CACAhC,GAAI1B,KAAKiB,MAAMS,GACf6B,SAAUvD,KAAKiB,MAAMsC,gBAnB7BC,EAAA,CAA0BnB,aC8BXsB,EAjCf,SAAAhE,GAEE,SAAAgE,EAAY1C,GAAO,IAAApB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2D,IACjB9D,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,KAAAF,OAAAU,EAAA,EAAAV,CAAA6D,GAAAlD,KAAAT,KAAMiB,KAMR2C,SAAW,SAAC1B,GACVA,EAAE2B,iBACFhE,EAAKoB,MAAM6C,WAAW,CAAEL,SAAU5D,EAAKkE,MAAMN,YAT5B5D,EAYnBiC,SAAW,SAACI,GAAD,OAAOrC,EAAKmE,SAALlE,OAAAmE,EAAA,EAAAnE,CAAA,GAAiBoC,EAAEgC,OAAOtB,KAAQV,EAAEgC,OAAO3C,SAV3D1B,EAAKkE,MAAQ,CACXN,SAAU,IAHK5D,EAFrB,OAAAC,OAAAsB,EAAA,EAAAtB,CAAA6D,EAAAhE,GAAAG,OAAAuB,EAAA,EAAAvB,CAAA6D,EAAA,EAAArC,IAAA,SAAAC,MAAA,WAkBI,OACEnC,EAAAC,EAAAC,cAAA,QAAMsE,SAAU5D,KAAK4D,UACnBxE,EAAAC,EAAAC,cAAA,SACAuC,KAAK,OACLe,KAAK,WACLrB,MAAOvB,KAAK+D,MAAMI,KAClBrC,SAAU9B,KAAK8B,WACf1C,EAAAC,EAAAC,cAAA,SACAuC,KAAK,SACLN,MAAM,gBA3BdoC,EAAA,CAA6BtB,8BC4Ed+B,EAvEf,SAAAzE,GAEE,SAAAyE,EAAYnD,GAAO,IAAApB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoE,IACjBvE,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,KAAAF,OAAAU,EAAA,EAAAV,CAAAsE,GAAA3D,KAAAT,KAAMiB,KASRoD,aAAe,WACb,MAAO,CACLxD,WAAY,UACZyB,MAAO,UAbQzC,EAiBnBiE,WAAa,SAACQ,GACZ,IAAIC,EAAWC,IAAKC,KACpBH,EAAQ5C,GAAK6C,EAEb1E,EAAKmE,SAAS,CAACU,MAAK,GAAA/D,OAAAb,OAAA6E,EAAA,EAAA7E,CAAMD,EAAKkE,MAAMW,OAAjB,CAAwBJ,OArB3BzE,EAwBnB+E,WAAa,SAAClD,GACZ7B,EAAKmE,SAAU,CAACU,MAAM5E,OAAA6E,EAAA,EAAA7E,CAAKD,EAAKkE,MAAMW,MAAMG,OAAO,SAACC,GAAD,OAAQA,EAAGpD,KAAOA,QAzBpD7B,EA4BnB0D,SAAW,SAAC7B,EAAIyC,GACdtE,EAAKmE,SAAU,CAACU,MAAM7E,EAAKkE,MAAMW,MAAMK,IAAI,SAACD,GAC1C,OAAIA,EAAGpD,KAAOA,EACLoD,GAEPA,EAAGrB,SAAWU,EACPW,QAhCXjF,EAAKkE,MAAQ,CAEXW,MAAO,GACP9B,KAAM,0BACNoC,UAAU,GANKnF,EAFrB,OAAAC,OAAAsB,EAAA,EAAAtB,CAAAsE,EAAAzE,GAAAG,OAAAuB,EAAA,EAAAvB,CAAAsE,EAAA,EAAA9C,IAAA,aAAAC,MAAA,WAyCe,IAAAC,EAAAxB,KAET,OACEZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAC2F,EAAD,CAASnB,WAAY9D,KAAK8D,aAE1B1E,EAAAC,EAAAC,cAAC4F,EAAD,CAAYtC,KAAM5C,KAAK+D,MAAMnB,OAC3B5C,KAAK+D,MAAMW,MAAMK,IAAI,SAACD,GAAD,OACrB1F,EAAAC,EAAAC,cAAC6F,EAAD,CACA7D,IAAKwD,EAAGpD,GACRA,GAAIoD,EAAGpD,GACP+B,SAAUqB,EAAGrB,SACbmB,WAAYpD,EAAKoD,WACjBrB,SAAU/B,EAAK+B,UACfnE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAvD3B,CAAA+B,IAAA,SAAAC,MAAA,WA+DI,OACEnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBqC,MAAO5B,KAAKqE,gBACxCrE,KAAKoF,kBAjEfhB,EAAA,CAA0B/B,aCL1B,SAASgD,EAAOpE,GACZ,OACE7B,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAChB0C,QAAShB,EAAMgB,QACfL,MAAQ,CACR0D,gBAAiB,UACjB/C,OAAQ,OACRD,MAAO,QACPxB,QAAS,YACTyE,UAAW,SACXvE,eAAgB,OAChBmC,QAAS,eACTqC,SAAU,SAVZ,mBAiBC,IAgBQC,EAhBf,SAAA9F,GAEI,SAAA8F,EAAYxE,GAAO,IAAApB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyF,IACf5F,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,KAAAF,OAAAU,EAAA,EAAAV,CAAA2F,GAAAhF,KAAAT,KAAMiB,KACD8C,MAAQ,GAFElE,EAFvB,OAAAC,OAAAsB,EAAA,EAAAtB,CAAA2F,EAAA9F,GAAAG,OAAAuB,EAAA,EAAAvB,CAAA2F,EAAA,EAAAnE,IAAA,SAAAC,MAAA,WAQW,IAAAC,EAAAxB,KACP,OACIZ,EAAAC,EAAAC,cAAC+F,EAAD,CACApD,QAAS,kBAAMT,EAAKP,MAAMyE,wBAXlCD,EAAA,CAA6BpD,aC8CdsD,EA7Df,SAAAhG,GAEE,SAAAgG,EAAY1E,GAAO,IAAApB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2F,IACjB9F,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,KAAAF,OAAAU,EAAA,EAAAV,CAAA6F,GAAAlF,KAAAT,KAAMiB,KAMRL,SAAW,WACT,MAAO,CACFC,WAAY,UACZyB,MAAO,OACPsD,KAAM,YACNC,OAAQ,OACR/E,QAAS,OACTgF,WAAY,aAdAjG,EAkBnBkG,QAAU,SAACC,GACTnG,EAAKmE,SAAS,CAACiC,MAAK,GAAAtF,OAAAb,OAAA6E,EAAA,EAAA7E,CAAMD,EAAKkE,MAAMkC,OAAjB,CAAwBD,OAnB3BnG,EAsBnB6F,eAAiB,WACf,IACMQ,EACN,CAACtD,KAAM,0BACPlB,GAHiB8C,IAAKC,MAKtB5E,EAAKmE,SAAS,CAACgB,UAAU,GACvBnF,EAAKkG,QAAQG,KA3BfrG,EAAKkE,MAAQ,CACXkC,MAAO,IAHQpG,EAFrB,OAAAC,OAAAsB,EAAA,EAAAtB,CAAA6F,EAAAhG,GAAAG,OAAAuB,EAAA,EAAAvB,CAAA6F,EAAA,EAAArE,IAAA,SAAAC,MAAA,WAkCW,IAGH4E,EAHG3E,EAAAxB,KAkBP,OAbEmG,EAHuC,IAA5BnG,KAAK+D,MAAMkC,MAAM9F,OAI5Bf,EAAAC,EAAAC,cAAC8G,EAAD,CACAV,eAAgB1F,KAAK0F,iBAEP,CAACtG,EAAAC,EAAAC,cAAC8G,EAAD,CACfV,eAAgB1F,KAAK0F,iBACrB1F,KAAK+D,MAAMkC,MAAMlB,IAAI,SAACD,GAAD,OACnB1F,EAAAC,EAAAC,cAAC+G,EAAD,CACAN,QAASvE,EAAKuE,QACdzE,IAAKwD,EAAGpD,QAKZtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAsBqC,MAAO5B,KAAKY,YAC9CuF,OAtDPR,EAAA,CAAoCtD,aCOrBiE,MAVf,WACE,OAEElH,EAAAC,EAAAC,cAACF,EAAAC,EAAMkH,SAAP,KACInH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAACkH,EAAD,QCRJC,EAAa,EAiBJC,EACD,WADCA,EAEK,iBAFLA,EAGE,cCOAC,EAxBF,SAAAtD,GAAmC,IAAhCuD,EAAgCvD,EAAhCuD,OAAQC,EAAwBxD,EAAxBwD,SAAU5E,EAAcoB,EAAdpB,QAChC,OAAI2E,EACKxH,EAAAC,EAAAC,cAAA,YAAOuH,GAIdzH,EAAAC,EAAAC,cAAA,KACEwH,KAAK,GACL7E,QAAS,SAAAC,GACPA,EAAE2B,iBACF5B,MAGD4E,ICJQE,cARS,SAAChD,EAAOiD,GAAR,MAAsB,CAC5CJ,OAAQI,EAASnC,SAAWd,EAAMkD,mBAGT,SAACC,EAAUF,GAAX,MAAyB,CAClD/E,QAAS,kBAAMiF,EFF6B,CAC5CrF,KAAM,wBACNgD,OEA4CmC,EAASnC,YAGxCkC,CAGbJ,GCDaQ,EAVA,kBACb/H,EAAAC,EAAAC,cAAA,kBACQF,EAAAC,EAAAC,cAAC8H,EAAD,CAAYvC,OAAQ6B,GAApB,OACL,KACDtH,EAAAC,EAAAC,cAAC8H,EAAD,CAAYvC,OAAQ6B,GAApB,UACC,KACDtH,EAAAC,EAAAC,cAAC8H,EAAD,CAAYvC,OAAQ6B,GAApB,eCgBWK,gBAtBC,SAAA1D,GAAkB,IAC5BgE,EADaH,EAAe7D,EAAf6D,SAGjB,OACE9H,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QACEsE,SAAU,SAAA1B,GJTK,IAAAiC,EIUbjC,EAAE2B,iBACGwD,EAAM9F,MAAM+F,SAGjBJ,GJda/C,EIcIkD,EAAM9F,MJdD,CAC9BM,KAAM,WACNH,GAAI+E,IACJtC,UIYQkD,EAAM9F,MAAQ,MAGhBnC,EAAAC,EAAAC,cAAA,SAAOiI,IAAK,SAAAC,GAAI,OAAKH,EAAQG,KAC7BpI,EAAAC,EAAAC,cAAA,UAAQuC,KAAK,UAAb,gBCAO4F,EAjBF,SAAApE,GAAA,IAAGpB,EAAHoB,EAAGpB,QAASyF,EAAZrE,EAAYqE,UAAWvD,EAAvBd,EAAuBc,KAAvB,OACX/E,EAAAC,EAAAC,cAAA,MACE2C,QAASA,EACTL,MAAO,CACLZ,eAAgB0G,EAAY,eAAiB,SAG9CvD,ICaUwD,EAnBE,SAAAtE,GAAA,IAAGuE,EAAHvE,EAAGuE,MAAOC,EAAVxE,EAAUwE,YAAV,OACfzI,EAAAC,EAAAC,cAAA,UACGsI,EAAM7C,IAAI,SAAC7D,EAAM4G,GAAP,OACT1I,EAAAC,EAAAC,cAACyI,EAADjI,OAAAkI,OAAA,CAAM1G,IAAKwG,GAAW5G,EAAtB,CAA4Be,QAAS,kBAAM4F,EAAYC,WCFvDG,EAAkB,SAACL,EAAO/C,GAC9B,OAAQA,GACN,KAAK6B,EACH,OAAOkB,EACT,KAAKlB,EACH,OAAOkB,EAAM/C,OAAO,SAAAqD,GAAC,OAAIA,EAAER,YAC7B,KAAKhB,EACH,OAAOkB,EAAM/C,OAAO,SAAAqD,GAAC,OAAKA,EAAER,YAC9B,QACE,MAAM,IAAIS,MAAM,mBAAqBtD,KAY5BkC,cARS,SAAAhD,GAAK,MAAK,CAChC6D,MAAOK,EAAgBlE,EAAM6D,MAAO7D,EAAMkD,oBAGjB,SAAAC,GAAQ,MAAK,CACtCkB,WAAY,SAAA1G,GAAE,OAAIwF,EPXM,SAAAxF,GAAE,MAAK,CAC/BG,KAAM,cACNH,MOS2B0G,CAAW1G,OAGzBqF,CAGbY,GChBaU,EARU,kBACvBjJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACgJ,EAAD,MACAlJ,EAAAC,EAAAC,cAACiJ,EAAD,MACAnJ,EAAAC,EAAAC,cAACkJ,EAAD,QCAWC,EANW,WACxB,OACErJ,EAAAC,EAAAC,cAACoJ,EAAD,2CCDiBlF,eACnB,SAAAA,EAAYvC,GAAO,IAAApB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwD,IACjB3D,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,KAAAF,OAAAU,EAAA,EAAAV,CAAA0D,GAAA/C,KAAAT,KAAMiB,KAIR0H,gBAAkB,SAACzG,GACjBrC,EAAKmE,SAAS,CAAC4E,QAAU,YACzB/I,EAAKmE,SAAS,CAAC6E,aAAchJ,EAAKkE,MAAM8E,eAPvBhJ,EAUnBiJ,mBAAqB,SAAC5G,GACpBrC,EAAKmE,SAAS,CAAC4E,QAAU,gBACzB/I,EAAKmE,SAAS,CAAC6E,aAAchJ,EAAKkE,MAAM8E,eAZvBhJ,EAenBkJ,YAAc,WACZlJ,EAAKmE,SAAS,CAAEgF,WAAW,KAhBVnJ,EAmBnBoJ,aAAe,WACbpJ,EAAKmE,SAAS,CAAEgF,WAAW,KAlB3BnJ,EAAKkE,MAAQ,CAAC6E,QAAS,cAAeC,aAAa,EAAOG,WAAW,GAFpDnJ,wEAyBjB,IAAIqJ,EAEFA,EADElJ,KAAK+D,MAAM8E,YACAzJ,EAAAC,EAAAC,cAAC6J,EAAA,EAAKC,QAAN,CAAcxH,MAAO,CAACyH,cAAe,QAASC,QAAQ,SAAQlK,EAAAC,EAAAC,cAACiK,EAAA,EAAD,CAAM3G,KAAK,UAClE,KAEtB,IAAO4G,EAAQxJ,KAAK+D,MAAMiF,UAE5B,OACE5J,EAAAC,EAAAC,cAAC6J,EAAA,EAAKM,KAAN,KACErK,EAAAC,EAAAC,cAACoK,GAAA,EAAD,CAAS9H,MAAO,CAAC0D,gBAAiBtF,KAAK+D,MAAM6E,SAC7Ce,YAAa3J,KAAK2I,gBAClBiB,WAAY5J,KAAK8I,mBACjB7G,QAASjC,KAAK+I,aAGZG,EACA9J,EAAAC,EAAAC,cAAC6J,EAAA,EAAKC,QAAN,CAAcxH,MAAO,CAACiI,aAAc,eAAgB7J,KAAKiB,MAAM6I,UAEjE1K,EAAAC,EAAAC,cAACyK,EAAA,EAAD,CAAOP,KAAMA,EAAMQ,QAAShK,KAAKiJ,aAAcgB,qBAAmB,EAACC,QAAM,GACzE9K,EAAAC,EAAAC,cAAA,mCACIF,EAAAC,EAAAC,cAAA,8LA9CwB6K,IAAM9H,uECmBzB+H,GAvBI,SAAC1I,GAChB,MAAO,CACHG,KAAM,cACNH,OAoBO0I,GAhBG,SAAC1I,EAAI2I,GACnB,MAAO,CACHxI,KAAM,aACNH,KACA2I,WAYOD,GARI,SAACE,EAAUR,GAC1B,MAAO,CACHjI,KAAM,eACNyI,WACAR,YCZK1F,GAAb,SAAAzE,GAEE,SAAAyE,EAAYnD,GAAO,IAAApB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoE,IACjBvE,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,KAAAF,OAAAU,EAAA,EAAAV,CAAAsE,GAAA3D,KAAAT,KAAMiB,KAURsJ,mBAAqB,SAACrI,GACpBrC,EAAKmE,SAAS,CAACqG,OAAQnI,EAAEgC,OAAO3C,SAZf1B,EAenB2K,mBAAqB,SAACtI,GACpBA,EAAE2B,iBACFhE,EAAKoB,MAAMwJ,UAAU5K,EAAKoB,MAAMyJ,KAAKhJ,GAAI7B,EAAKkE,MAAMsG,SAjBnCxK,EAoBnB8K,cAAgB,SAACzI,GACfA,EAAEgC,OAAO0G,SACT/K,EAAKmE,SAAS,CAAC6G,iBAAkB,YACjChL,EAAKmE,SAAS,CAAC8G,aAAc,WAvBZjL,EA0BnBkL,aAAe,SAAC7I,GACdrC,EAAKmE,SAAS,CAAC6G,iBAAkB,gBACjChL,EAAKmE,SAAS,CAAC8G,aAAc,YA5BZjL,EA+BnBmL,iBAAmB,SAAC9I,GACA,KAAdA,EAAE+I,UACJC,OAAOC,eAAeC,kBACtBvL,EAAKkL,iBAlCUlL,EAsCnBwL,oBAAsB,SAACnJ,GACrBA,EAAE2B,iBACgC,KAA9BhE,EAAKkE,MAAMuH,iBACfzL,EAAKoB,MAAM6C,WAAWjE,EAAKoB,MAAMS,GAAI7B,EAAKkE,MAAMuH,gBAChDzL,EAAKmE,SAAS,CAACsH,eAAgB,OA1CdzL,EA8CnB0L,iBAAmB,SAACrJ,GAClBrC,EAAKmE,SAAS,CAACsH,eAAgBpJ,EAAEgC,OAAO3C,SA/CvB1B,EAkDnB2L,kBAAoB,SAACtJ,GACF,KAAdA,EAAE+I,SAAmB/I,EAAEuJ,UACxB5L,EAAKwL,oBAAoBnJ,IAlD3BrC,EAAKkE,MAAQ,CACbsG,OAAQ,GACRQ,iBAAkB,cAClBC,aAAc,OACdY,mBAAoB,EACpBJ,eAAgB,IAPCzL,EAFrB,OAAAC,OAAAsB,EAAA,EAAAtB,CAAAsE,EAAAzE,GAAAG,OAAAuB,EAAA,EAAAvB,CAAAsE,EAAA,EAAA9C,IAAA,SAAAC,MAAA,WA0DW,IAEHmD,EAFGlD,EAAAxB,KAWP,OARIA,KAAKiB,MAAMyD,QACbA,EAAQ1E,KAAKiB,MAAMyD,MAAMK,IAAI,SAAC4G,GAAD,OAC7BvM,EAAAC,EAAAC,cAACsM,GAAD,CACAtK,IAAKqK,EAAKjK,GACVoI,QAAS6B,EAAK7B,aAKd1K,EAAAC,EAAAC,cAACuM,GAAA,EAAKC,OAAN,KACE1M,EAAAC,EAAAC,cAACoK,GAAA,EAAD,CAASqC,QAAM,EAACzJ,MAAM,UACtBlD,EAAAC,EAAAC,cAACuM,GAAA,EAAD,CAAMG,QAAS,EAAGC,OAAO,cAEvB7M,EAAAC,EAAAC,cAACuM,GAAA,EAAKC,OAAN,CAAaI,MAAO,IACpB9M,EAAAC,EAAAC,cAAC6M,GAAA,EAAD,CAAMvI,SAAU5D,KAAKwK,oBACjBpL,EAAAC,EAAAC,cAAC6M,GAAA,EAAKC,MAAN,KACAhN,EAAAC,EAAAC,cAAA,SACAsC,MAAO,CAAC0D,gBAAiBtF,KAAK+D,MAAM8G,iBAAkBwB,YAAarM,KAAK+D,MAAM+G,cAC9EwB,YAAY,uBACZ/K,MAAOvB,KAAK+D,MAAMsG,OAClBkC,UAAWvM,KAAKgL,iBAChBwB,QAASxM,KAAK2K,cACd8B,OAAQzM,KAAK+K,aACbjJ,SAAU9B,KAAKuK,wBAKnBnL,EAAAC,EAAAC,cAACuM,GAAA,EAAKC,OAAN,CAAaI,MAAO,GAClB9M,EAAAC,EAAAC,cAACoN,GAAA,EAAD,CACAzK,QAAS,WAAOT,EAAKP,MAAM0L,kBAAkBnL,EAAKP,MAAMyJ,KAAKhJ,KAC7DkL,UAAQ,EAACC,UAAQ,EAACvK,MAAM,SAASwK,KAAK,UAAS1N,EAAAC,EAAAC,cAACiK,EAAA,EAAD,CAAM3G,KAAK,SAAShB,MAAO,CAACmL,WAAY,YAK3F3N,EAAAC,EAAAC,cAAC0N,GAAA,EAAD,MACA5N,EAAAC,EAAAC,cAAC6J,EAAA,EAAD,KACIzE,GAGJtF,EAAAC,EAAAC,cAAC6M,GAAA,EAAD,CAAMvI,SAAU5D,KAAKqL,qBACnBjM,EAAAC,EAAAC,cAAC6M,GAAA,EAAKC,MAAN,KACEhN,EAAAC,EAAAC,cAAC2N,GAAA,EAAD,CACAC,KAAMlN,KAAK+D,MAAM2H,mBAAoByB,YAAU,EAACb,YAAY,kCAC5D/K,MAAOvB,KAAK+D,MAAMuH,eAClBxJ,SAAU9B,KAAKuL,iBACfgB,UAAWvM,KAAKwL,qBAGlBpM,EAAAC,EAAAC,cAAC6M,GAAA,EAAKC,MAAN,KACEhN,EAAAC,EAAAC,cAAC8N,GAAA,EAAD,CAAQ9K,MAAM,SAAST,KAAK,UAA5B,kBAhHZuC,EAAA,CAA0B/B,aA8IX0E,eArBS,SAAChD,EAAOiD,GAC9B,MAAO,CAEL0D,KAAM3G,EAAMkC,MAAMoH,KAAK,SAAC3C,GACtB,OAAOA,EAAKhJ,KAAOsF,EAAStF,KAG9BgD,MAAOX,EAAMW,MAAMG,OAAO,SAAC8G,GACzB,GAAIA,EAAK2B,SAAWtG,EAAStF,GAAI,OAAOiK,MAKnB,SAACzE,GAC1B,MAAO,CACLpD,WAAY,SAACwG,EAAUR,GAAc5C,EAASkD,GAAuBE,EAAUR,KAC/E6C,kBAAmB,SAACjL,GAASwF,EAASkD,GAAuB1I,KAC7D+I,UAAW,SAAC/I,EAAI2I,GAAanD,EAASkD,GAAsB1I,EAAI2I,OAIrDtD,CAA6C3C,cCtI7CmJ,GAbC,WACZ,MAAO,CACH1L,KAAM,aCSD2L,GAAb,SAAA7N,GAAA,SAAA6N,IAAA,IAAA5N,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwN,GAAA,QAAAvN,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAA0N,IAAA/M,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MAEIqN,eAAiB,WACb5N,EAAKoB,MAAM8E,WAHnBlG,EAAA,OAAAC,OAAAsB,EAAA,EAAAtB,CAAA0N,EAAA7N,GAAAG,OAAAuB,EAAA,EAAAvB,CAAA0N,EAAA,EAAAlM,IAAA,SAAAC,MAAA,WAOQ,IAAI0E,EAAQjG,KAAKiB,MAAMgF,MAAMlB,IAAI,SAAA2F,GAAI,OAC7BtL,EAAAC,EAAAC,cAACoO,GAAD,CACApM,IAAKoJ,EAAKhJ,GACVA,GAAIgJ,EAAKhJ,OAGrB,OACAtC,EAAAC,EAAAC,cAACqO,GAAA,EAAD,KACIvO,EAAAC,EAAAC,cAACuM,GAAA,EAAD,CAAMG,QAAS,GACT/F,EACF7G,EAAAC,EAAAC,cAACqO,GAAA,EAAD,KACIvO,EAAAC,EAAAC,cAAC8N,GAAA,EAAD,CAAQQ,OAAK,EAACtL,MAAM,SAASL,QAASjC,KAAKyN,gBAA3C,uBAlBhBD,EAAA,CAA2BnL,aAsCZ0E,eAZS,SAAChD,GACrB,MAAO,CACHkC,MAAOlC,EAAMkC,QAIM,SAACiB,GACxB,MAAO,CACHnB,QAAS,WAAQmB,EAASqG,SAInBxG,CAA6CyG,ICxC7CK,OARf,WACE,OACEzO,EAAAC,EAAAC,cAACF,EAAAC,EAAMkH,SAAP,KACInH,EAAAC,EAAAC,cAACwO,GAAD,6BCgGOC,sNArFbhK,MAAQ,CACN6D,MAAO,MAST7F,aAAe,SAACL,GACd7B,EAAKmE,SAAS,CAAE4D,MAAO/H,EAAKkE,MAAM6D,MAAM7C,IAAI,SAAA7D,GAI1C,OAHIA,EAAKQ,KAAOA,IACdR,EAAKC,UAAYD,EAAKC,UAEjBD,SAMXiB,QAAU,SAACT,GACTsM,KAAMC,OAAN,8CAAAtN,OAA2De,IAC1DwM,KAAK,SAAAC,GAAG,OAAItO,EAAKmE,SAAS,CAAE4D,MAAM9H,OAAA6E,EAAA,EAAA7E,CAAKD,EAAKkE,MAAM6D,MAAM/C,OAAO,SAAA3D,GAAI,OAAIA,EAAKQ,KAAOA,YAOtF0M,QAAU,SAACzM,GAYTqM,KAAMK,KAAK,6CAA8C,CACvD1M,QAAOR,UAAU,IAEhB+M,KAAK,SAAAC,GAAG,OAAItO,EAAKmE,SAAS,CACzB4D,MAAK,GAAAjH,OAAAb,OAAA6E,EAAA,EAAA7E,CAAMD,EAAKkE,MAAM6D,OAAjB,CACLuG,EAAIG,+FA3CU,IAAA9M,EAAAxB,KAClBgO,KAAMO,IAAI,wDACTL,KAAK,SAAAC,GAAG,OAAI3M,EAAKwC,SAAS,CAAE4D,MAAOuG,EAAIG,0CAgDxC,OACElP,EAAAC,EAAAC,cAACkP,EAAA,EAAD,KACEpP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAEbH,EAAAC,EAAAC,cAACmP,EAAD,MACArP,EAAAC,EAAAC,cAACoP,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,SAAA5N,GAAK,OACjC7B,EAAAC,EAAAC,cAACF,EAAAC,EAAMkH,SAAP,KACAnH,EAAAC,EAAAC,cAACwP,GAAD,UAIF1P,EAAAC,EAAAC,cAACoP,EAAA,EAAD,CAAOE,KAAK,kBAAkBG,UAAWtG,IAEzCrJ,EAAAC,EAAAC,cAACoP,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASG,UAAWzI,IAEtClH,EAAAC,EAAAC,cAACoP,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,OAAQ,SAAA5N,GAAK,OACvC7B,EAAAC,EAAAC,cAACF,EAAAC,EAAMkH,SAAP,KACEnH,EAAAC,EAAAC,cAACwP,GAAD,oBAzEEzM,wBChBZ2M,GAAY,GCAZA,GAAY,CAAC,CAACtN,GAAI,EAAG4L,OAAQ,GAAIxD,QAAS,YCSjCmF,eAAgB,CAC3BhJ,MFPwB,WAA+B,IAA9BlC,EAA8B7D,UAAAC,OAAA,QAAA+O,IAAAhP,UAAA,GAAAA,UAAA,GAAtB8O,GAAWG,EAAWjP,UAAAC,OAAA,EAAAD,UAAA,QAAAgP,EAEnD,OAAQC,EAAOtN,MAEX,IAAK,cAGD,OADiBkC,EAAMc,OAAO,SAAC6F,GAAD,OAAUA,EAAKhJ,KAAOyN,EAAOzN,KAI/D,IAAK,WAED,IAAMwE,EAAa,CAACxE,GAAI0N,KAAKC,SAAUhF,OAAQ,IAC/C,SAAA1J,OAAAb,OAAA6E,EAAA,EAAA7E,CAAWiE,GAAX,CAAkBmC,IAEtB,IAAK,aAUD,OARenC,EAAMgB,IAAI,SAAC2F,GAC1B,OAAIA,EAAKhJ,KAAOyN,EAAOzN,GACZgJ,EAEA5K,OAAAwP,GAAA,EAAAxP,CAAA,GAAI4K,EAAX,CACAL,OAAQ8E,EAAO9E,WAKvB,QACQ,OAAOtG,IEpBvBW,MDTwB,WAA+B,IAA9BX,EAA8B7D,UAAAC,OAAA,QAAA+O,IAAAhP,UAAA,GAAAA,UAAA,GAAtB8O,GAAWG,EAAWjP,UAAAC,OAAA,EAAAD,UAAA,QAAAgP,EAEvD,OAAQC,EAAOtN,MACX,IAAK,eACL0N,QAAQC,IAAI,uBACR,IAAMC,EAAU,CAAC/N,GAAI0N,KAAKC,SAAU/B,OAAQ6B,EAAO7E,SAAUR,QAASqF,EAAOrF,SAC7E,SAAAnJ,OAAAb,OAAA6E,EAAA,EAAA7E,CAAWiE,GAAX,CAAkB0L,IACtB,QACI,OAAO1L,MEHb2L,GAAQC,YAAYC,IAE1B1E,OAAOwE,MAAQA,GAEfb,iBACIzP,EAAAC,EAAAC,cAACuQ,EAAA,EAAD,CAAUH,MAAOA,IACbtQ,EAAAC,EAAAC,cAACwQ,GAAD,OAGJC,SAASC,eAAe","file":"static/js/main.60e08b9d.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Header() {\n    return (\n        <div className=\"ui container\">\n            <div className=\"ui secondary pointing menu\">\n                <div className=\"item\"><Link to=\"/kanban\"><h4>Kanban Board</h4></Link></div>\n                <div className=\"right item\"><i className=\"home icon\"></i><Link to=\"/\"><h4>Home</h4></Link></div>\n            </div>\n            <div className=\"ui hidden divider\"></div>\n        </div>\n        \n    )\n}\n\nexport default Header;","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\n\n\nexport class TodoItem extends Component {\n\n    getStyle = () => {\n        return {\n            background: '#f4f4f4',\n            padding: '10px',\n            borderBottom: '1px #ccc dotted',\n            textDecoration: this.props.todo.complete ?\n            'line-through' : 'none'\n        }\n    }\n\n    render() {\n        const { id, title } = this.props.todo;\n        return (\n        <div style={this.getStyle()}>\n            <p>\n                <input type=\"checkbox\" onChange={this.props.markComplete.bind(this, id)}/>\n                 { ` ${title}` } \n                 {/* 2 Ways of doing this:\n                 <button onClick = {this.props.delTodo.bind(this, id)} style = {btnStyle}>x</button> */}\n                 <button onClick = {(e) => this.props.delTodo(id, e)} style = {btnStyle}>x</button>\n            </p>\n        </div>\n        )\n    }\n}\n\n// PropTypes\nTodoItem.propTypes = {\n    todo: PropTypes.object.isRequired,\n    markComplete: PropTypes.func.isRequired,\n    delTodo: PropTypes.func.isRequired,\n  }\n\n  const btnStyle = {\n      background: '#ff0000',\n      color: '#fff',\n      border: 'none',\n      padding: '5px 9px',\n      borderRadius: '50%',\n      cursor: 'pointer',\n      float: 'right'\n  }\n\nexport default TodoItem\n","import React, { Component } from 'react';\nimport TodoItem from './TodoItem';\nimport PropTypes from 'prop-types';\n\nclass Todos extends Component {\n\n\n  render() {\n    return this.props.todos.map((todo) => (\n        <TodoItem \n        key = {todo.id} \n        todo = {todo} \n        markComplete={this.props.markComplete}\n        delTodo={this.props.delTodo}\n        />\n    ));\n  }\n}\n\n// PropTypes \nTodos.propTypes = {\n  todos: PropTypes.array.isRequired,\n  markComplete: PropTypes.func.isRequired,\n  delTodo: PropTypes.func.isRequired,\n}\n\nexport default Todos;","import React, { Component } from 'react'\n\nexport class CardHeader extends Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.name}\n      </div>\n    )\n  }\n}\n\nexport default CardHeader\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class AddTodo extends Component {\n    state = {\n        title: ''\n    };\n\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.AddTodo(this.state.title);\n        this.setState({ title: '' });\n    }\n\n  render() {\n    return (\n      <form onSubmit = {this.onSubmit} style={{ display: 'flex' }}>\n        <input \n            type=\"text\" \n            name=\"title\" \n            style={{ flex: '10', padding: '5px'}}\n            placeholder=\"Add Todo ...\"\n            value={this.state.title}\n            onChange={this.onChange}\n        />\n        <input\n                type=\"submit\"\n                value=\"Submit\"\n                className=\"btn\"\n                style={{flex: '1'}}\n        />\n      </form>\n    )\n  } \n}\n\n// PropTypes\nAddTodo.propTypes = {\n  addTodo: PropTypes.func.isRequired\n};\n\nexport default AddTodo\n","import React, { Component } from 'react'\n\nimport { Menu, Item, Separator, Submenu, MenuProvider } from 'react-contexify';\nimport 'react-contexify/dist/ReactContexify.min.css';\n\n\nexport class TaskMenu extends Component {\n\n  TaskMenu = () => (\n    <Menu id='menu_id'>\n       <Item \n       onClick={onClickEditTask}>\n       Edit</Item>\n       <Item >Delete</Item>\n       <Separator />\n       <Submenu label=\"Placeholder\">\n        <Item disabled >Foo</Item>\n        <Item >Bar</Item>\n       </Submenu>\n    </Menu>\n  );\n  \n  MenuContainer = () => (\n    <div>\n        <MenuProvider \n        id=\"menu_id\" \n        style={{ border: '1px solid purple', \n        display: 'inline-block' }}\n        event={'onClick'}>\n            Right click me...\n        </MenuProvider>\n        {this.TaskMenu()}\n    </div>\n  );\n\n  render() {\n    return (\n      <div>\n        { this.MenuContainer() }\n      </div>\n      )\n  }\n}\n\nconst onClickEditTask = ({ event, props }) => this.props.editTask();\n\nexport default TaskMenu\n","import React, { Component } from 'react'\nimport TaskMenu from './TaskMenu'\n\n\n\nexport class Task extends Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  getStyle = () => {\n    return {\n      color: 'blue',\n      background: 'grey',\n    }\n  }\n\n  render() {\n    return (\n      <div style={this.getStyle()}>\n        { this.props.taskText }\n        <TaskMenu\n        id={this.props.id}\n        editTask={this.props.editTask}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Task\n","import React, { Component } from 'react'\n\nexport class TaskAdd extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      taskText: \"\"\n    }\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.props.addNewTask({ taskText: this.state.taskText });\n  }\n\n  onChange = (e) => this.setState({ [e.target.name] : e.target.value});\n\n\n  render() {\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n        type=\"text\"\n        name=\"taskText\"\n        value={this.state.text}\n        onChange={this.onChange} />\n        <input\n        type=\"submit\"\n        value=\"submit\" />\n      </form>\n    )\n  }\n}\n\nexport default TaskAdd\n","import React, { Component } from 'react'\nimport CardHeader from './CardHeader'\nimport Task from './Task'\nimport TaskAdd from './TaskAdd'\n\nimport UUID from 'uuid'\n\nexport class Card extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Task objects contain: id, taskText\n      tasks: [],\n      name: \"Click here to rename...\",\n      rendered: false\n    }\n  }\n\n  getStyleCard = () => {\n    return {\n      background: '#ffffff',\n      color: 'black'\n    }\n  }\n\n  addNewTask = (newTask) => {\n    let uniqueID = UUID.v4();\n    newTask.id = uniqueID;\n\n    this.setState({tasks: [...this.state.tasks, newTask]});\n  }\n\n  deleteTask = (id) => {\n    this.setState( {tasks: [...this.state.tasks.filter((el) => el.id !== id)]} )\n  }\n\n  editTask = (id, text) => {\n    this.setState( {tasks:this.state.tasks.map((el) => {\n      if (el.id !== id) { \n        return el;\n      } else {\n        el.taskText = text;\n        return el;\n      } \n    })} )\n  }\n\n  renderCard() {\n    \n      return (\n        <div className=\"card-rendered\">\n          <TaskAdd addNewTask={this.addNewTask} />\n\n          <CardHeader name={this.state.name}/>\n          { this.state.tasks.map((el) => (\n            <Task \n            key={el.id}\n            id={el.id}\n            taskText={el.taskText}\n            deleteTask={this.deleteTask}\n            editTask={this.editTask} >\n            <div className=\"test\"></div>\n            </Task>\n            )) }\n        </div>\n      )\n    }\n\n  render() {\n    return (\n      <div className=\"container-card\" style={this.getStyleCard()}>\n        { this.renderCard() }\n      </div>\n    )\n  }\n}\n\nexport default Card\n","import React, { Component } from 'react'\n\nfunction Button(props) {\n    return (\n      <button className=\"button\" \n        onClick={props.onClick}\n        style= {{\n        backgroundColor: '#4CAF50', /* Green */\n        border: 'none',\n        color: 'white',\n        padding: '15px 32px',\n        textAlign: 'center',\n        textDecoration: 'none',\n        display: 'inline-block',\n        fontSize: '16px'\n      }}>\n        Create new card\n      </button>\n    );\n  }\n\nexport class CardAdd extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n      }\n\n  render() {\n    return (\n        <Button\n        onClick={() => this.props.onCardAddClick()}/>\n    )\n  }\n}\n\nexport default CardAdd\n","import React, { Component } from 'react'\nimport Card from './Card'\nimport CardAdd from './CardAdd'\n\nimport UUID from 'uuid'\n\nexport class CardsContainer extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      cards: []\n    }\n  }\n\n  getStyle = () => {\n    return {\n         background: '#cc0000',\n         color: '#fff',\n         flex: 'flex-wrap',\n         margin: '20px',\n         padding: '10px',\n         whiteSpace: 'pre-wrap'\n    }\n  }\n\n  addCard = (cardObj) => {\n    this.setState({cards: [...this.state.cards, cardObj]});\n  }\n\n  onCardAddClick = () => {\n    const uniqueID = UUID.v4();\n    const newCardObj =\n    {name: 'Click here to rename...',\n    id: uniqueID};\n\n    this.setState({rendered: true},\n      this.addCard(newCardObj));\n  }\n\n  render() {\n    // Check to see what components to render depending on number of cards\n    const init = this.state.cards.length === 0;\n    let renderCards;\n    if (init) {\n      renderCards = \n      <CardAdd \n      onCardAddClick={this.onCardAddClick}/>;\n    } else {\n      renderCards = [<CardAdd \n      onCardAddClick={this.onCardAddClick}/>, \n      this.state.cards.map((el) => (\n        <Card \n        addCard={this.addCard}\n        key={el.id}/>\n      ))]\n    }\n\n    return (\n    <div className=\"container-cardslist\" style={this.getStyle()}>\n      {renderCards}\n    </div>\n    )\n  }\n}\n    \n\nexport default CardsContainer\n","import React from 'react'\nimport CardsContainer from '../cards/CardsContainer';\n\nfunction CardsPage() {\n  return (\n    // JSX requires an element to be returned; react.fragment is a 'ghost' element so we can do DOM changes\n    <React.Fragment>\n        <h1>Cards App</h1>\n        <CardsContainer />      \n    </React.Fragment>\n  )\n}\n\nexport default CardsPage;","let nextTodoId = 0\nexport const addTodo = text => ({\n  type: 'ADD_TODO',\n  id: nextTodoId++,\n  text\n})\n\nexport const setVisibilityFilter = filter => ({\n  type: 'SET_VISIBILITY_FILTER',\n  filter\n})\n\nexport const toggleTodo = id => ({\n  type: 'TOGGLE_TODO',\n  id\n})\n\nexport const VisibilityFilters = {\n  SHOW_ALL: 'SHOW_ALL',\n  SHOW_COMPLETED: 'SHOW_COMPLETED',\n  SHOW_ACTIVE: 'SHOW_ACTIVE'\n}","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Link = ({ active, children, onClick }) => {\n  if (active) {\n    return <span>{children}</span>\n  }\n\n  return (\n    <a\n      href=\"\"\n      onClick={e => {\n        e.preventDefault()\n        onClick()\n      }}\n    >\n      {children}\n    </a>\n  )\n}\n\nLink.propTypes = {\n  active: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func.isRequired\n}\n\nexport default Link","import { connect } from 'react-redux'\nimport { setVisibilityFilter } from '../../actions/reduxTutorial'\nimport Link from '../../components/reduxTutorial/Link'\n\nconst mapStateToProps = (state, ownProps) => ({\n  active: ownProps.filter === state.visibilityFilter\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onClick: () => dispatch(setVisibilityFilter(ownProps.filter))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Link)","import React from 'react'\nimport FilterLink from '../../containers/reduxTutorial/FilterLink'\nimport { VisibilityFilters } from '../../actions/reduxTutorial/index'\n\nconst Footer = () => (\n  <p>\n    Show: <FilterLink filter={VisibilityFilters.SHOW_ALL}>All</FilterLink>\n    {', '}\n    <FilterLink filter={VisibilityFilters.SHOW_ACTIVE}>Active</FilterLink>\n    {', '}\n    <FilterLink filter={VisibilityFilters.SHOW_COMPLETED}>Completed</FilterLink>\n  </p>\n)\n\nexport default Footer","import React from 'react'\nimport { connect } from 'react-redux'\nimport { addTodo } from '../../actions/reduxTutorial'\n\nconst AddTodo = ({ dispatch }) => {\n  let input\n\n  return (\n    <div>\n      <form\n        onSubmit={e => {\n          e.preventDefault()\n          if (!input.value.trim()) {\n            return\n          }\n          dispatch(addTodo(input.value))\n          input.value = ''\n        }}\n      >\n        <input ref={node => (input = node)} />\n        <button type=\"submit\">Add Todo</button>\n      </form>\n    </div>\n  )\n}\n\nexport default connect()(AddTodo)","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Todo = ({ onClick, completed, text }) => (\n  <li\n    onClick={onClick}\n    style={{\n      textDecoration: completed ? 'line-through' : 'none'\n    }}\n  >\n    {text}\n  </li>\n)\n\nTodo.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  completed: PropTypes.bool.isRequired,\n  text: PropTypes.string.isRequired\n}\n\nexport default Todo","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Todo from './Todo'\n\nconst TodoList = ({ todos, onTodoClick }) => (\n  <ul>\n    {todos.map((todo, index) => (\n      <Todo key={index} {...todo} onClick={() => onTodoClick(index)} />\n    ))}\n  </ul>\n)\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      completed: PropTypes.bool.isRequired,\n      text: PropTypes.string.isRequired\n    }).isRequired\n  ).isRequired,\n  onTodoClick: PropTypes.func.isRequired\n}\n\nexport default TodoList","import { connect } from 'react-redux'\nimport { toggleTodo } from '../../actions/reduxTutorial'\nimport TodoList from '../../components/reduxTutorial/ToDoList'\nimport { VisibilityFilters } from '../../actions/reduxTutorial'\n\nconst getVisibleTodos = (todos, filter) => {\n  switch (filter) {\n    case VisibilityFilters.SHOW_ALL:\n      return todos\n    case VisibilityFilters.SHOW_COMPLETED:\n      return todos.filter(t => t.completed)\n    case VisibilityFilters.SHOW_ACTIVE:\n      return todos.filter(t => !t.completed)\n    default:\n      throw new Error('Unknown filter: ' + filter)\n  }\n}\n\nconst mapStateToProps = state => ({\n  todos: getVisibleTodos(state.todos, state.visibilityFilter)\n})\n\nconst mapDispatchToProps = dispatch => ({\n  toggleTodo: id => dispatch(toggleTodo(id))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TodoList)","import React from 'react'\nimport Footer from './Footer'\nimport AddTodo from '../../containers/reduxTutorial/AddTodo'\nimport VisibleTodoList from '../../containers/reduxTutorial/VisibleTodoList'\n\nconst ReduxTutorialApp = () => (\n  <div>\n    <AddTodo />\n    <VisibleTodoList />\n    <Footer />\n  </div>\n)\n\nexport default ReduxTutorialApp","import React from 'react'\nimport ReduxTutorialApp from '../reduxTutorial/ReduxTutorialApp'\n\nconst ReduxTutorialPage = () => {\n  return (\n    <ReduxTutorialApp />\n  )\n}\n\nexport default ReduxTutorialPage;","import React from 'react'\nimport Modal from 'react-responsive-modal'\nimport { List, Segment, Icon } from 'semantic-ui-react'\n\nexport default class Task extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {bgColor: 'transparent', taskHovered: false, openModal: false}\n  }\n\n  hoverTaskHandle = (e) => {\n    this.setState({bgColor : '#F2F1F1'});\n    this.setState({taskHovered: !this.state.taskHovered});\n  }\n\n  hoverTaskOffHandle = (e) => {\n    this.setState({bgColor : 'transparent'});\n    this.setState({taskHovered: !this.state.taskHovered});\n  }\n\n  onOpenModal = () => {\n    this.setState({ openModal: true });\n  }\n \n  onCloseModal = () => {\n    this.setState({ openModal: false });\n  }\n\n  render() {\n    // Conditionally render menu icon\n    let renderIcon;\n    if (this.state.taskHovered) {\n      renderIcon = <List.Content style={{pointerEvents: 'none'}} floated='right'><Icon name='bars'></Icon></List.Content>\n    } else { renderIcon = null}\n\n    const  open  = this.state.openModal\n\n  return (\n    <List.Item >\n      <Segment style={{backgroundColor: this.state.bgColor}} \n      onMouseOver={this.hoverTaskHandle}\n      onMouseOut={this.hoverTaskOffHandle}\n      onClick={this.onOpenModal}\n      >\n      \n      { renderIcon }\n        <List.Content style={{overflowWrap: 'break-word'}}>{this.props.content}</List.Content>\n      </Segment>\n      <Modal open={open} onClose={this.onCloseModal} closeOnOverlayClick center>\n      <h2>Simple centered modal</h2>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam\n            pulvinar risus non risus hendrerit venenatis. Pellentesque sit amet\n            hendrerit risus, sed porttitor quam.\n          </p>\n      </Modal>\n    </List.Item>\n  )}\n}\n","const deleteCard = (id) => {\n    return {\n        type: 'DELETE_CARD',\n        id\n    }\n}\n\nconst setHeader = (id, header) => {\n    return {\n        type: 'SET_HEADER',\n        id,\n        header\n    }\n}\n\nconst addNewTask = (parentID, content) => {\n    return {\n        type: 'ADD_NEW_TASK',\n        parentID,\n        content\n    }\n}\n\nexport default { deleteCard, setHeader, addNewTask }","import React, { Component } from 'react'\nimport Task from './Task'\nimport { Button, Grid, Segment, Form, Input, Divider, List, TextArea, Label, Icon } from 'semantic-ui-react'\nimport PropTypes from 'prop-types' //TODO: Add required proptypes for every component\nimport { connect } from 'react-redux'\nimport cardActions from '../../actions/kanbanBoard/cardActions'\n\nexport class Card extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n    header: \"\", \n    headerBackground: 'transparent', \n    headerBorder: 'none',\n    taskTextAreaHeight: 1,\n    addTaskContent: \"\"\n  };\n  }\n\n  handleHeaderChange = (e) => {\n    this.setState({header: e.target.value})\n  }\n\n  handleHeaderSubmit = (e) => {\n    e.preventDefault();\n    this.props.setHeader(this.props.card.id, this.state.header);\n  }\n\n  onHeaderFocus = (e) => {\n    e.target.select();\n    this.setState({headerBackground: '#E8E7E7'})\n    this.setState({headerBorder: 'solid'})\n  }\n\n  onHeaderBlur = (e) => {\n    this.setState({headerBackground: 'transparent'})\n    this.setState({headerBorder: 'hidden'})\n  }\n\n  onHeaderKeyPress = (e) => {\n    if (e.keyCode === 13) {\n      window.getSelection().removeAllRanges();\n      this.onHeaderBlur();\n    }\n  }\n\n  handleNewTaskSubmit = (e) => {\n    e.preventDefault();\n    if (this.state.addTaskContent !== \"\" ) {\n    this.props.addNewTask(this.props.id, this.state.addTaskContent);\n    this.setState({addTaskContent: \"\"})\n    }\n  }\n\n  handleTaskChange = (e) => {\n    this.setState({addTaskContent: e.target.value});\n  }\n\n  onNewTaskKeyPress = (e) => {\n    if(e.keyCode === 13 && !e.shiftKey) {\n      this.handleNewTaskSubmit(e);\n    }       \n  }\n\n  render() {\n    // Ready own tasks for rendering\n    let tasks;\n    if (this.props.tasks) {\n      tasks = this.props.tasks.map((task) => (\n      <Task\n      key={task.id}\n      content={task.content}\n      />\n    ))}\n\n    return (\n      <Grid.Column>\n        <Segment raised color='orange'>\n        <Grid columns={2} padded='vertically'>\n\n          <Grid.Column width={12} >\n          <Form onSubmit={this.handleHeaderSubmit}>\n              <Form.Field>\n              <input\n              style={{backgroundColor: this.state.headerBackground, borderStyle: this.state.headerBorder}}\n              placeholder='Enter a new title...'\n              value={this.state.header}\n              onKeyDown={this.onHeaderKeyPress}\n              onFocus={this.onHeaderFocus}\n              onBlur={this.onHeaderBlur}\n              onChange={this.handleHeaderChange} />\n              </Form.Field>\n          </Form>\n          </Grid.Column>\n\n          <Grid.Column width={4}>\n            <Label\n            onClick={() => {this.props.onDeleteCardClick(this.props.card.id)}} \n            floating circular color=\"orange\" size=\"medium\"><Icon name='delete' style={{marginLeft: '0px'}} />\n            </Label>\n          </Grid.Column>          \n        </Grid>\n\n        <Divider />\n        <List >\n          { tasks }\n        </List>\n\n        <Form onSubmit={this.handleNewTaskSubmit}>\n          <Form.Field>\n            <TextArea \n            rows={this.state.taskTextAreaHeight} autoHeight placeholder='Click here to add a new task...'\n            value={this.state.addTaskContent}\n            onChange={this.handleTaskChange}\n            onKeyDown={this.onNewTaskKeyPress}>\n            </TextArea>\n          </Form.Field>\n          <Form.Field>\n            <Button color=\"orange\" type=\"submit\">Submit</Button>\n          </Form.Field>\n        </Form>\n        </Segment>\n      </Grid.Column>  \n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    // Maps any properties of this card to itself\n    card: state.cards.find((card) => {\n      return card.id === ownProps.id;\n    }),\n    // Maps any tasks that is linked to parent card\n    tasks: state.tasks.filter((task) => {\n      if (task.cardID === ownProps.id) return task;\n    })\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addNewTask: (parentID, content) => { dispatch(cardActions.addNewTask(parentID, content))},\n    onDeleteCardClick: (id) => { dispatch(cardActions.deleteCard(id))},\n    setHeader: (id, header) => { dispatch(cardActions.setHeader(id, header))}\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Card)\n\n\n","\n\nconst addCard = () => {\n    return {\n        type: 'ADD_CARD'\n    }\n}\n\nconst editCardHeader = (id) => {\n    return {\n        type: 'EDIT_CARD_HEADER',\n        id\n    }\n}\n\nexport default { addCard, editCardHeader }","/**\n * TODO: Refactor Board.js (and any other functional components) to containers folder\n * \n * Central Board app for rendering and handling Kanban Board components\n * This app is created to practice developing with React-Redux and UI frameworks (semanticUI)\n */\n\nimport React, { Component } from 'react'\nimport Card from './Card'\nimport { Container, Button, Grid } from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport boardActions from '../../actions/kanbanBoard/boardActions'\n\nexport class Board extends Component {\n    \n    onAddCardClick = () => {\n        this.props.addCard();\n    };\n  \n    render() {\n        let cards = this.props.cards.map(card => (\n                <Card \n                key={card.id}\n                id={card.id}/>\n    ));\n\n    return (\n    <Container>\n        <Grid columns={3}>\n            { cards }\n            <Container>\n                <Button basic color='orange' onClick={this.onAddCardClick} >Add New Card</Button>\n            </Container>\n        </Grid>\n    </Container>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        cards: state.cards\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addCard: () => { dispatch(boardActions.addCard())}\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Board)\n","import React from 'react'\nimport Board from '../kanbanBoard/Board';\n\nfunction KanbanPage() {\n  return (\n    <React.Fragment>\n        <Board />      \n    </React.Fragment>\n  )\n}\n\nexport default KanbanPage;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Header from './components/layout/Header';\nimport Todos from './components/todo/Todos';\nimport AddTodo from './components/todo/AddTodo';\nimport CardsPage from './components/pages/CardsPage';\nimport ReduxTutorialPage from './components/pages/ReduxTutorialPage';\nimport KanbanPage from './components/pages/KanbanPage';\n\n// import uuid from 'uuid'; // Used for testing before using POST request to JSONplaceholder\nimport axios from 'axios';\n\nimport './App.css'; \nimport CardsContainer from './components/cards/CardsContainer';\n\nclass App extends Component {\n  state = {\n    todos: []\n  }\n\n  componentDidMount() {\n    axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10')\n    .then(res => this.setState({ todos: res.data }));\n  }\n\n  // Toggle complete\n  markComplete = (id) => {\n    this.setState({ todos: this.state.todos.map(todo => {\n      if (todo.id === id) {\n        todo.complete = !todo.complete;\n      }\n      return todo;\n    }) })\n  }\n\n  // Delete Todo\n  // Using JSONplaceholder to test mock REST API calls\n  delTodo = (id) => {\n    axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n    .then(res => this.setState({ todos: [...this.state.todos.filter(todo => todo.id !== id)]}\n    ));\n\n  }\n\n  // Add Todo\n  // Using JSONplaceholder to test mock REST API calls\n  AddTodo = (title) => {\n\n    /**\n     *Was used for testing before using POST request in place of current res.data argument for setState\n     *const newTodo = {\n        id: uuid.v4(),\n        title,\n        complete: false\n      }\n     */\n\n    // If POST is resolved, then we add todo item to our state\n    axios.post('https://jsonplaceholder.typicode.com/todos', {\n      title, complete: false\n    })\n      .then(res => this.setState({ \n        todos: [...this.state.todos, \n        res.data] }));\n  }\n\n  // create your menu first\n\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n\n            <Header />\n            <Route exact path=\"/\" render={props => (\n              <React.Fragment>\n              <KanbanPage />\n            </React.Fragment>\n            )} />\n\n            <Route path=\"/redux-tutorial\" component={ReduxTutorialPage} />\n\n            <Route exact path=\"/cards\" component={CardsPage} />\n\n            <Route exact path=\"/kanban\" render={props => (\n              <React.Fragment>\n                <KanbanPage />\n              </React.Fragment>\n            )} />\n          \n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\n\n\nexport default App;\n\n","const initState = [];\n\n\nexport const cardsReducer = (state = initState, action) => {\n\n        switch (action.type) {\n\n            case 'DELETE_CARD':\n            // Deletes card object\n                const newState = state.filter((card) => card.id !== action.id)\n                return newState\n                \n\n            case 'ADD_CARD':\n            // Creates new card object\n                const newCardObj = {id: Math.random(), header: ''};\n                return [...state, newCardObj]\n\n            case 'SET_HEADER':\n            // Map through card objects and update the matched card header\n            let updatedCards = state.map((card) => {\n                if (card.id !== action.id) {\n                    return card;\n                } else {\n                    return {...card,\n                    header: action.header}\n                }\n            })\n                return updatedCards;\n            \n            default:\n                    return state;\n        }\n  }\n","const initState = [{id: 1, cardID: 50, content: 'testing'}];\n\nexport const tasksReducer = (state = initState, action) => {\n    \n    switch (action.type) {\n        case \"ADD_NEW_TASK\":\n        console.log(\"ADD_TASK was called\")\n            const newCard = {id: Math.random(), cardID: action.parentID, content: action.content};\n            return [...state, newCard];\n        default: \n            return state;\n    }\n}","/**\n * Central place to contain reducers to connect to the store\n * ** currently not being used - TODO: make combineReducers work\n */\n\nimport { combineReducers } from 'redux'\nimport { cardsReducer } from './kanbanBoard/cards'\nimport { tasksReducer } from './kanbanBoard/tasks'\n\nexport default combineReducers({\n    cards: cardsReducer,\n    tasks: tasksReducer\n})","import React from 'react'\nimport { render } from 'react-dom'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport rootReducer from './reducers'\n\nconst store = createStore(rootReducer)\n\nwindow.store = store; // Testing purposes - access with store.getState() in console\n\nrender(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , \n    document.getElementById('root')\n);\n"],"sourceRoot":""}